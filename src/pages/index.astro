---
import '../styles/base.css';
import Layout from '../layouts/Layout.astro';
import Block from '../components/Block.astro';

// --- Define the "shape" of our data for TypeScript ---
interface DataSeries {
	values: [number, number][];
}

interface ApiData {
	chunk_retrieval_duration_all_time: DataSeries;
	file_download_speed_24h: DataSeries;
	upload_success_24h: DataSeries;
	download_success_24h: DataSeries;
	upload_success_all_time: DataSeries;
	chunk_retrieval_rate_24h: DataSeries;
	chunk_retrieval_duration_24h: DataSeries;
	download_success_all_time: DataSeries;
	file_retrieval_rate_24h: DataSeries;
	file_download_speed_all_time: DataSeries;
}
// --- End of type definitions ---


// Robust data fetching with type safety
let apiData: Partial<ApiData> = {};
try {
	const response = await fetch('https://sla.ethswarm.org/api/v1/all');
	if (response.ok) {
		apiData = await response.json();
	} else {
		console.error("API Error: Failed to fetch Swarm data with status", response.status);
	}
} catch (error) {
	console.error("Fetch Error: Could not connect to Swarm API.", error);
}

const {
	chunk_retrieval_duration_all_time = { values: [] },
	file_download_speed_24h = { values: [] },
	upload_success_24h = { values: [] },
	download_success_24h = { values: [] },
	upload_success_all_time = { values: [] },
	chunk_retrieval_rate_24h = { values: [] },
	chunk_retrieval_duration_24h = { values: [] },
	download_success_all_time = { values: [] },
	file_retrieval_rate_24h = { values: [] },
	file_download_speed_all_time = { values: [] }
} = apiData;


// Typed rounding function
function round(value: number, decimals = 2): number {
	return Math.floor((value + Number.EPSILON) * Math.pow(10, decimals)) / Math.pow(10, decimals);
}
---

<Layout title="Swarm Dashboard">
	<main class="pt-12 pb-24">

		<div class="hidden text-[#00CA8E] text-[#4971FF] text-[#BF38FF] text-[#8D46FF] text-[#45E5E7] text-[#5AD2FE] from-[#5AD2FE] from-[#45E5E7] from-[#8D46FF] from-[#BF38FF]"></div>

		<div class="flex justify-center"><img src="/swarm.png" alt="" class="h-8" /></div>

		<div class="max-w-7xl mx-auto px-5 lg:px-8">
			<div class="px-5 sm:px-[60px] my-[120px] sm:grid sm:grid-cols-2 lg:grid-cols-12 sm:gap-x-[22px] border border-transparent">
				<h1 class="lg:col-span-7 text-[48px] font-bold tracking-[-0.48px]">Swarm Dashboard</h1>
				<div class="lg:col-span-7 text-[19px] leading-[26px] mt-6">
					<p>The Swarm dashboard offers vital insights into key metrics, such as availability, data durability, and network latency, including real time data and historical trends.</p>
				</div>
			</div>
		</div>

		<div class="max-w-7xl mx-auto px-5 lg:px-8">
		<div class="px-5 sm:px-[60px] pt-10 pb-16 sm:pt-20 sm:pb-28 rounded-lg border border-[#2D3843] bg-[#1F2831]/70 space-y-20 sm:space-y-36">
		<Block
			title="Network Availability"
			description={`Network reliability as measured by upload and download success rates accross all <a href="https://docs.ethswarm.org/docs/concepts/DISC/neighborhoods" target="_blank">neighborhoods</a> without respect to long-term retrievability.`}
			cards={[
				{
					id: 'download_success_24',
					title: '24 Hour Neighborhood Download Availability Rate',
					tooltip: 'Percentage of successful downloads across all neighborhoods in the last 24 hours, calculated by subtracting download errors from total attempts and dividing by total attempts.',
					color: '#00CA8E',
					gradient: '00CA8E',
                    {/* FIX: Inlined the data query logic, safely */}
					value: round(download_success_24h.values[download_success_24h.values.length - 1]?.[1] ?? 0),
				},
				{
					id: 'download_success_all',
					title: 'All Time Neighborhood Download Availability Rate',
					tooltip: 'Overall percentage of successful downloads across all neighborhoods since the start of data tracking, computed over the entire data history.',
					color: '#00CA8E',
					gradient: 'green',
					value: round(download_success_all_time.values[download_success_all_time.values.length - 1]?.[1] ?? 0),
				},
				{
					id: 'upload_success_24',
					title: '24 Hour Neighborhood Upload Availability Rate',
					tooltip: 'Percentage of successful uploads across all neighborhoods in the past 24 hours, determined by the difference between total upload attempts and upload errors, divided by total attempts.',
					color: '#4971FF',
					gradient: 'blue',
					value: round(upload_success_24h.values[upload_success_24h.values.length - 1]?.[1] ?? 0),
				},
				{
					id: 'upload_success_all',
					title: 'All Time Neighborhood Upload Availability Rate',
					tooltip: 'Cumulative percentage of successful uploads across all neighborhoods since data collection began, calculated over the entire period.',
					color: '#4971FF',
					gradient: 'blue',
					value: round(upload_success_all_time.values[upload_success_all_time.values.length - 1]?.[1] ?? 0, 2),
				}
			]}
			graphs={
				[
					{
						id: 'download_success_24h',
						title: 'Daily Neighborhood Download Availability Rate (Percent / Day)',
						type: 'bar',
						tooltip: 'Time series graph of the percentage of successful downloads across all neighborhoods in the last 24 hours, calculated by subtracting download errors from total attempts and dividing by total attempts.',
						data: download_success_24h.values.slice(download_success_24h.values.length - Math.min(30, download_success_24h.values.length), download_success_24h.values.length),
					},
					{
						id: 'upload_success_24h',
						title: 'Daily Neighborhood Upload Availability Rate (Percent / Day)',
						type: 'bar',
						tooltip: 'Time series graph of the percentage of successful uploads across all neighborhoods in the past 24 hours, determined by the difference between total upload attempts and upload errors, divided by total attempts.',
						data: upload_success_24h.values.slice(upload_success_24h.values.length - Math.min(30, upload_success_24h.values.length), upload_success_24h.values.length),
					}
				]
			}
		/>

		<Block
			title="Data Durability"
			description={`The retrievability of both chunks and large files over extended time periods.`}
			cards={[
				{
					id: 'chunk_retrieval_rate_24',
					title: '24 Hour Chunk Retrieval Success Rate',
					tooltip: 'Measures the percentage of chunks successfully retrieved over the entire data collection period, based on successful retrievals against total attempts.',
					color: '#BF38FF',
					gradient: 'magnetos',
					value: round(chunk_retrieval_rate_24h.values[chunk_retrieval_rate_24h.values.length - 1]?.[1] ?? 0),
				},
				{
					id: 'file_retrieval_rate_24',
					title: '24 Hour File Retrieval Success Rate',
					tooltip: 'Evaluates the success rate in retrieving large files across the network’s history, considering download attempts and failures.',
					color: '#8D46FF',
					gradient: 'candy-grape-fizz',
					value: round(file_retrieval_rate_24h.values[file_retrieval_rate_24h.values.length - 1]?.[1] ?? 0),
				},
			]}
			graphs={
				[
					{
						id: 'chunk_retrieval_rate_24h',
						title: 'Daily Chunk Retrieval Success Rate (Percent / Day)',
						type: 'line',
						tooltip: 'Time series graph of percentage of chunks successfully retrieved over the entire data collection period, based on successful retrievals against total attempts.',
						data: chunk_retrieval_rate_24h.values.slice(chunk_retrieval_rate_24h.values.length - Math.min(30, chunk_retrieval_rate_24h.values.length), chunk_retrieval_rate_24h.values.length),
					},
					{
						id: 'file_retrieval_rate_24h',
						title: 'Daily Large File Retrieval Success Rate (Percent / Day)',
						type: 'line',
						tooltip: 'Time series graph of the success rate in retrieving large files across the network’s history, considering download attempts and failures.',
						data: file_retrieval_rate_24h.values.slice(file_retrieval_rate_24h.values.length - Math.min(30, file_retrieval_rate_24h.values.length), file_retrieval_rate_24h.values.length),
					}
				]
			}
		/>

		<Block
			title="Latency"
			description={`Network response time and download speeds for both single chunks and large files.`}
			cards={[
				{
					id: 'chunk_retrieval_duration_24',
					type: "number",
					title: '24 Hour Average Chunk Retrieval Time',
					tooltip: 'Presents the average time taken to retrieve a chunk in the last 24 hours, in milliseconds, calculated from the sum of all retrieval times and counts.',
					color: '#45E5E7',
					gradient: 'near-moon',
					unit: 'ms',
					value: round(chunk_retrieval_duration_24h.values[chunk_retrieval_duration_24h.values.length - 1]?.[1] ?? 0),
				},
				{
					id: 'chunk_retrieval_duration_all',
					type: "number",
					title: 'All Time Average Chunk Retrieval Time',
					tooltip: 'Displays the long-term average time for chunk retrieval, in milliseconds, taking into account the entire period of data collection.',
					color: '#45E5E7',
					gradient: 'near-moon',
					unit: 'ms',
					value: round(chunk_retrieval_duration_all_time.values[chunk_retrieval_duration_all_time.values.length - 1]?.[1] ?? 0),
				},
				{
					id: "file_download_speed_24",
					type: "number",
					title: '24 Hour Average Download Speed of Large Files',
					tooltip: 'Shows the average download speed for large files in the last 24 hours, in Mebibytes per second (MiB/s), based on file sizes and download durations.',
					unit: 'MiB/s',
					color: '#5AD2FE',
					gradient: 'thors-thunder',
					value: round(file_download_speed_24h.values[file_download_speed_24h.values.length - 1]?.[1] ?? 0),
				},
				{
					id: "file_download_speed_all",
					type: "number",
					title: 'All Time Average Download Speed of Large Files',
					tooltip: 'Indicates the cumulative average download speed of large files, in MiB/s, calculated over the entire data collection period.',
					color: '#5AD2FE',
					gradient: 'thors-thunder',
					unit: 'MiB/s',
					value: round(file_download_speed_all_time.values[file_download_speed_all_time.values.length - 1]?.[1] ?? 0, 2),
				}
			]}
			graphs={
				[
					{
						id: 'chunk_retrieval_duration_24h',
						title: 'Daily Average Chunk Retrieval Time (Milliseconds / Day)',
						type: 'bar',
						tooltip: 'Time series graph of the average time taken to retrieve a chunk in the last 24 hours, in milliseconds, calculated from the sum of all retrieval times and counts.',
						data: chunk_retrieval_duration_24h.values.slice(chunk_retrieval_duration_24h.values.length - Math.min(30, chunk_retrieval_duration_24h.values.length), chunk_retrieval_duration_24h.values.length),
					},
					{
						id: 'file_download_speed_24h',
						title: 'Daily Average File Download Speed (MiBps / Day)',
						type: 'bar',
						tooltip: 'Time series graph if the average download speed for large files in the last 24 hours, in Mebibytes per second (MiB/s), based on file sizes and download durations.',
						data: file_download_speed_24h.values.slice(file_download_speed_24h.values.length - Math.min(30, file_download_speed_24h.values.length), file_download_speed_24h.values.length),
					}
				]
			}
		/>
		</div>
		</div>
	</main>
</Layout>
